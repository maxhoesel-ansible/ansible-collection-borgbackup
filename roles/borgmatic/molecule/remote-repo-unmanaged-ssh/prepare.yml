- hosts: ubuntu:debian
  tasks:
    - name: Update cache
      apt:
        update_cache: yes

- hosts: clients
  tasks:
    - name: Install ssh
      package:
        name: ssh
    - name: Generate ssh key # noqa no-changed-when
      command: "ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ''"
    - name: Read ssh pubkey
      command: cat /root/.ssh/id_rsa.pub
      changed_when: no
      register: borgmatic_host_key
    - name: Generate host entry
      set_fact:
        borg_server_host_entry:
          name: "{{ ansible_hostname }}"
          key: "{{ borgmatic_host_key.stdout }}"

- hosts: servers
  tasks:
    - name: Install sshd
      package:
        name: openssh-server
    - name: Start sshd
      systemd:
        name: sshd
        state: started
    - name: Generate hosts keys list
      set_fact:
        borg_server_authorized_hosts: "{{ (borg_server_authorized_hosts | default([])) + [hostvars[item]['borg_server_host_entry']] }}"
      loop: "{{ groups['clients'] }}"

    # Use the borg server_role to install a backup server.
    # Ideally we'd use some externally-prepared docker container like
    # https://github.com/grantbevis/borg-server instead, to prevent depending on our own collection.
    - name: Install borg server
      include_role:
        name: borg_server

- hosts: clients
  tasks:
    # Emulate manual known-hosts management
    - name: Add server to known_hosts # noqa no-changed-when
      shell: "ssh-keyscan -H {{ item }} >> /root/.ssh/known_hosts"
      loop: "{{ groups.servers }}"
      retries: 5
      delay: 5
      # ensure we actually gather *all* ssh keys from the remote host
      until: >
        borgmatic_ssh_fingerprints.rc == 0 and
        "Connection closed" not in borgmatic_ssh_fingerprints.stderr and
        "Connection reset" not in borgmatic_ssh_fingerprints.stderr
      register: borgmatic_ssh_fingerprints
